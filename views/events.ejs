<div class="container py-5">
    <!-- Search and Filter Section -->
    <div class="search-filter-section mb-4">
        <!-- Post Event Button (Only for Alumni) -->
        <% if (alumni) { %>
            <div class="text-center mb-4">
                <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#postEventModal">
                    <i class="fas fa-plus me-2"></i>Post an Event
                </button>
            </div>
        <% } %>

        <!-- Filters -->
        <div class="row g-3 mb-4">
            <div class="col-md-4">
                <div class="search-bar">
                    <input type="text" id="searchInput" class="form-control glass-input" placeholder="Search events...">
                    <i class="fas fa-search search-icon"></i>
                </div>
            </div>
            <div class="col-md-3">
                <select id="typeFilter" class="form-select glass-input">
                    <option value="">All Types</option>
                    <option value="workshop">Workshops</option>
                    <option value="seminar">Seminars</option>
                    <option value="webinar">Webinars</option>
                    <option value="conference">Conferences</option>
                    <option value="networking">Networking</option>
                    <option value="other">Other</option>
                </select>
            </div>
            <div class="col-md-3">
                <select id="dateFilter" class="form-select glass-input">
                    <option value="">All Dates</option>
                    <option value="today">Today</option>
                    <option value="tomorrow">Tomorrow</option>
                    <option value="week">This Week</option>
                    <option value="month">This Month</option>
                </select>
            </div>
            <div class="col-md-2">
                <select id="modeFilter" class="form-select glass-input">
                    <option value="">All Modes</option>
                    <option value="online">Online</option>
                    <option value="offline">Offline</option>
                </select>
            </div>
        </div>
    </div>

    <!-- Events Grid -->
    <div class="row g-4" id="eventsGrid">
        <% if (typeof events !== 'undefined' && events.length > 0) { %>
            <% events.forEach(event => { %>
                <div class="col-md-6 col-lg-4 event-card" 
                     data-type="<%= (event.type || 'other').toLowerCase() %>"
                     data-mode="<%= (event.mode || 'offline').toLowerCase() %>"
                     data-date="<%= event.date || new Date() %>">
                    <div class="card glass-card h-100">
                        <img src="<%= event.image || '/images/default-event.jpg' %>" class="card-img-top" alt="<%= event.title || 'Event' %>" style="height: 150px; object-fit: cover;">
                        <div class="card-body">
                            <div class="event-type-badge <%= (event.type || 'other').toLowerCase() %>">
                                <%= event.type || 'Other' %>
                            </div>
                            <h5 class="card-title mb-2"><%= event.title || 'Untitled Event' %></h5>
                            <p class="card-text text-muted mb-2" style="font-size: 0.9rem; line-height: 1.4;"><%= event.description || 'No description available' %></p>
                            <div class="event-details">
                                <div class="detail-item">
                                    <i class="far fa-calendar me-2"></i>
                                    <%= event.date ? new Date(event.date).toLocaleDateString() : 'Date TBD' %>
                                </div>
                                <div class="detail-item">
                                    <i class="far fa-clock me-2"></i>
                                    <%= event.time || 'Time TBD' %>
                                </div>
                                <div class="detail-item">
                                    <i class="<%= (event.mode || 'offline') === 'online' ? 'fas fa-video' : 'fas fa-map-marker-alt' %> me-2"></i>
                                    <%= event.mode === 'online' ? (event.platform || 'Online Platform TBD') : (event.venue || 'Venue TBD') %>
                                </div>
                            </div>
                            <div class="mt-2">
                                <a href="<%= event.mode === 'online' ? (event.link || '#') : (event.registrationLink || '#') %>" 
                                   class="btn btn-primary btn-sm" 
                                   target="_blank">
                                    <%= event.mode === 'online' ? 'Join Event' : 'Register Now' %>
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            <% }); %>
        <% } else { %>
            <div class="col-12 text-center">
                <p class="text-muted">No events found. Be the first to post an event!</p>
            </div>
        <% } %>
    </div>
</div>

<!-- Post Event Modal -->
<div class="modal fade" id="postEventModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content glass-card">
            <div class="modal-header">
                <h5 class="modal-title">Post an Event</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form action="/events" method="POST" enctype="multipart/form-data">
                    <div class="mb-3">
                        <label for="title" class="form-label">Event Title</label>
                        <input type="text" class="form-control glass-input" id="title" name="title" required>
                    </div>
                    <div class="mb-3">
                        <label for="description" class="form-label">Description</label>
                        <textarea class="form-control glass-input" id="description" name="description" rows="3" required></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="image" class="form-label">Event Image</label>
                        <input type="file" class="form-control glass-input" id="image" name="image" accept="image/*" required>
                    </div>
                    <div class="mb-3">
                        <label for="date" class="form-label">Date</label>
                        <input type="date" class="form-control glass-input" id="date" name="date" required>
                    </div>
                    <div class="mb-3">
                        <label for="time" class="form-label">Time</label>
                        <input type="time" class="form-control glass-input" id="time" name="time" required>
                    </div>
                    <div class="mb-3">
                        <label for="registrationLink" class="form-label">Registration Link</label>
                        <input type="url" class="form-control glass-input" id="registrationLink" name="registrationLink" required>
                    </div>
                    <div class="mb-3">
                        <label for="eventType" class="form-label">Event Type</label>
                        <select class="form-select glass-input" id="eventType" name="eventType" required>
                            <option value="">Select Type</option>
                            <option value="Workshop">Workshop</option>
                            <option value="Seminar">Seminar</option>
                            <option value="Conference">Conference</option>
                            <option value="Networking">Networking</option>
                            <option value="Career Fair">Career Fair</option>
                            <option value="Other">Other</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="tags" class="form-label">Tags (comma separated)</label>
                        <input type="text" class="form-control glass-input" id="tags" name="tags" placeholder="e.g., career, workshop, tech">
                    </div>
                    <div class="text-end">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary">Post Event</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<style>
    .search-filter-section {
        background: rgba(255, 255, 255, 0.05);
        padding: 2rem 0;
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.1);
        border-radius: 15px;
        margin: 1rem 0;
    }

    .glass-input {
        background: rgba(255, 255, 255, 0.1);
        border: 1px solid rgba(255, 255, 255, 0.2);
        color: white;
        padding: 0.75rem 1.25rem;
        border-radius: 30px;
        backdrop-filter: blur(10px);
        transition: all 0.3s ease;
        width: 100%;
    }

    .glass-input:focus {
        background: rgba(255, 255, 255, 0.15);
        border-color: rgba(0, 219, 222, 0.5);
        box-shadow: 0 0 15px rgba(0, 219, 222, 0.1);
        outline: none;
    }

    .glass-input option {
        background: #1a1a2e;
        color: white;
    }

    .search-bar {
        position: relative;
    }

    .search-bar .search-icon {
        position: absolute;
        right: 15px;
        top: 50%;
        transform: translateY(-50%);
        color: rgba(255, 255, 255, 0.5);
    }

    .glass-card {
        background: rgba(26, 26, 46, 0.8);
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.2);
        border-radius: 15px;
        transition: all 0.3s ease;
        overflow: hidden;
        height: 100%;
        display: flex;
        flex-direction: column;
    }

    .glass-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
    }

    .card-body {
        padding: 1rem;
        display: flex;
        flex-direction: column;
        flex-grow: 1;
    }

    .event-type-badge {
        position: absolute;
        top: 15px;
        right: 15px;
        padding: 5px 15px;
        border-radius: 20px;
        font-size: 0.8rem;
        font-weight: 500;
        z-index: 1;
    }

    .event-type-badge.workshop { background: linear-gradient(45deg, #FF6B6B, #FF8E8E); }
    .event-type-badge.seminar { background: linear-gradient(45deg, #4ECDC4, #45B7AF); }
    .event-type-badge.webinar { background: linear-gradient(45deg, #96C93D, #7EAE32); }
    .event-type-badge.conference { background: linear-gradient(45deg, #A18CD1, #8675A9); }
    .event-type-badge.networking { background: linear-gradient(45deg, #00B4DB, #0083B0); }
    .event-type-badge.other { background: linear-gradient(45deg, #FBD786, #f7797d); }

    .event-details {
        margin-top: 0.5rem;
        padding-top: 0.5rem;
        border-top: 1px solid rgba(255, 255, 255, 0.1);
    }

    .detail-item {
        display: flex;
        align-items: center;
        margin-bottom: 0.25rem;
        color: rgba(255, 255, 255, 0.7);
        font-size: 0.85rem;
    }

    .section-header {
        position: relative;
        padding-bottom: 1rem;
        border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    }

    .section-actions .btn {
        padding: 0.25rem 0.5rem;
        margin-left: 0.5rem;
    }

    .btn-outline-primary {
        color: #00dbde;
        border-color: #00dbde;
        transition: all 0.3s ease;
    }

    .btn-outline-primary:hover {
        background: #00dbde;
        color: white;
    }

    .btn-primary {
        background: linear-gradient(45deg, #00dbde, #fc00ff);
        border: none;
        padding: 0.4rem 1.2rem;
        border-radius: 30px;
        transition: all 0.3s ease;
        font-size: 0.9rem;
    }

    .btn-primary:hover {
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(0, 219, 222, 0.3);
    }

    /* List View Styles */
    .event-card.list-view {
        width: 100%;
        margin-bottom: 1rem;
    }

    .event-card.list-view .card {
        flex-direction: row;
    }

    .event-card.list-view .card-img-top {
        width: 200px;
        height: 100%;
    }
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const searchInput = document.getElementById('searchInput');
    const typeFilter = document.getElementById('typeFilter');
    const dateFilter = document.getElementById('dateFilter');
    const modeFilter = document.getElementById('modeFilter');
    const eventCards = document.querySelectorAll('.event-card');

    function filterEvents() {
        const searchTerm = searchInput.value.toLowerCase();
        const selectedType = typeFilter.value.toLowerCase();
        const selectedDate = dateFilter.value;
        const selectedMode = modeFilter.value;

        eventCards.forEach(card => {
            const title = card.querySelector('.card-title').textContent.toLowerCase();
            const description = card.querySelector('.card-text').textContent.toLowerCase();
            const type = card.dataset.type;
            const mode = card.dataset.mode;
            const date = new Date(card.dataset.date);

            const matchesSearch = title.includes(searchTerm) || description.includes(searchTerm);
            const matchesType = !selectedType || type === selectedType;
            const matchesMode = !selectedMode || mode === selectedMode;
            
            let matchesDate = true;
            if (selectedDate) {
                const today = new Date();
                const tomorrow = new Date(today);
                tomorrow.setDate(tomorrow.getDate() + 1);

                switch(selectedDate) {
                    case 'today':
                        matchesDate = date.toDateString() === today.toDateString();
                        break;
                    case 'tomorrow':
                        matchesDate = date.toDateString() === tomorrow.toDateString();
                        break;
                    case 'week':
                        const weekFromNow = new Date(today);
                        weekFromNow.setDate(today.getDate() + 7);
                        matchesDate = date >= today && date <= weekFromNow;
                        break;
                    case 'month':
                        matchesDate = date.getMonth() === today.getMonth() && 
                                    date.getFullYear() === today.getFullYear();
                        break;
                }
            }

            if (matchesSearch && matchesType && matchesDate && matchesMode) {
                card.style.display = '';
                card.style.opacity = '0';
                setTimeout(() => {
                    card.style.opacity = '1';
                }, 50);
            } else {
                card.style.display = 'none';
            }
        });
    }

    searchInput.addEventListener('input', filterEvents);
    typeFilter.addEventListener('change', filterEvents);
    dateFilter.addEventListener('change', filterEvents);
    modeFilter.addEventListener('change', filterEvents);

    // Add transition for smooth fade effect
    eventCards.forEach(card => {
        card.style.transition = 'opacity 0.3s ease';
    });
});
</script>
