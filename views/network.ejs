<!-- Search and Filter Section -->
<div class="search-filter-section mb-4">
    <div class="container">
        <div class="row">
            <div class="col-md-8 mb-3 mb-md-0">
                <div class="search-bar">
                    <input type="text" id="searchInput" class="form-control glass-input" placeholder="Search by name, company, or position...">
                    <i class="fas fa-search search-icon"></i>
                </div>
            </div>
            <div class="col-md-4">
                <select id="companyFilter" class="form-select glass-input">
                    <option value="">All Companies</option>
                    <% 
                    // Predefined list of major companies
                    const predefinedCompanies = [
                        'Google',
                        'Microsoft',
                        'Amazon',
                        'Apple',
                        'Meta',
                        'Netflix',
                        'Adobe',
                        'IBM',
                        'Intel',
                        'Oracle',
                        'Salesforce',
                        'Twitter',
                        'Uber',
                        'LinkedIn',
                        'NVIDIA',
                        'Dell',
                        'HP',
                        'Cisco',
                        'Samsung',
                        'Sony',
                        'Infosys',
                        'TCS',
                        'Wipro',
                        'Accenture',
                        'Deloitte',
                        'Goldman Sachs',
                        'JPMorgan Chase',
                        'Morgan Stanley'
                    ];

                    // Get existing companies from users
                    let companies = [];
                    users.forEach(user => {
                        if(user.company && !companies.includes(user.company)) {
                            companies.push(user.company);
                        }
                    });

                    // Combine and sort all companies
                    let allCompanies = [...new Set([...companies, ...predefinedCompanies])].sort();

                    // Create company groups
                    let techCompanies = allCompanies.filter(company => 
                        ['Google', 'Microsoft', 'Amazon', 'Apple', 'Meta', 'Netflix', 'Adobe', 'IBM', 'Intel', 
                         'Oracle', 'Salesforce', 'Twitter', 'Uber', 'LinkedIn', 'NVIDIA'].includes(company)
                    );
                    
                    let consultingCompanies = allCompanies.filter(company => 
                        ['Accenture', 'Deloitte', 'TCS', 'Infosys', 'Wipro', 'Cognizant'].includes(company)
                    );
                    
                    let financeCompanies = allCompanies.filter(company => 
                        ['Goldman Sachs', 'JPMorgan Chase', 'Morgan Stanley', 'Bank of America', 'Wells Fargo'].includes(company)
                    );
                    
                    let otherCompanies = allCompanies.filter(company => 
                        !techCompanies.includes(company) && 
                        !consultingCompanies.includes(company) && 
                        !financeCompanies.includes(company)
                    );
                    %>

                    <optgroup label="Tech Giants">
                        <% techCompanies.forEach(company => { %>
                            <option value="<%= company %>" <%= companies.includes(company) ? 'class="has-alumni"' : '' %>>
                                <%= company %> <%= companies.includes(company) ? '★' : '' %>
                            </option>
                        <% }); %>
                    </optgroup>

                    <optgroup label="Consulting">
                        <% consultingCompanies.forEach(company => { %>
                            <option value="<%= company %>" <%= companies.includes(company) ? 'class="has-alumni"' : '' %>>
                                <%= company %> <%= companies.includes(company) ? '★' : '' %>
                            </option>
                        <% }); %>
                    </optgroup>

                    <optgroup label="Finance">
                        <% financeCompanies.forEach(company => { %>
                            <option value="<%= company %>" <%= companies.includes(company) ? 'class="has-alumni"' : '' %>>
                                <%= company %> <%= companies.includes(company) ? '★' : '' %>
                            </option>
                        <% }); %>
                    </optgroup>

                    <optgroup label="Other Companies">
                        <% otherCompanies.forEach(company => { %>
                            <option value="<%= company %>" <%= companies.includes(company) ? 'class="has-alumni"' : '' %>>
                                <%= company %> <%= companies.includes(company) ? '★' : '' %>
                            </option>
                        <% }); %>
                    </optgroup>
                </select>
            </div>
        </div>
    </div>
</div>

<!-- Companies List -->
<div class="container mb-4">
    <div class="companies-section">
        <h5 class="text-white mb-3">Popular Companies</h5>
        <div class="row g-3">
            <% 
            let companyStats = {};
            users.forEach(user => {
                if(user.company) {
                    companyStats[user.company] = (companyStats[user.company] || 0) + 1;
                }
            });

            // Convert to array and sort by number of alumni
            let sortedCompanies = Object.entries(companyStats)
                .sort((a, b) => b[1] - a[1]);

            sortedCompanies.forEach(([company, count]) => { %>
                <div class="col-6 col-md-4 col-lg-3">
                    <div class="company-card" onclick="filterByCompany('<%= company %>')">
                        <div class="company-logo">
                            <!-- Default company icon if no logo available -->
                            <i class="fas fa-building"></i>
                        </div>
                        <div class="company-info">
                            <h6 class="company-name"><%= company %></h6>
                            <span class="alumni-count"><%= count %> alumni</span>
                        </div>
                    </div>
                </div>
            <% }); %>
        </div>
    </div>
</div>

<!-- Network Grid -->
<div class="container">
    <div class="row" id="alumniGrid">
        <% users.forEach(user => { %>
            <div class="col-md-6 col-lg-4 mb-4 alumni-card" 
                 data-name="<%= user.username.toLowerCase() %>"
                 data-company="<%= user.company ? user.company.toLowerCase() : '' %>"
                 data-position="<%= user.currentPosition ? user.currentPosition.toLowerCase() : '' %>">
                <div class="card glass-card mb-3">
                    <div class="card-body p-3">
                        <div class="d-flex align-items-center mb-3">
                            <img src="<%= user.profilePicture || '/images/default-avatar.png' %>" 
                                 alt="<%= user.username %>" 
                                 class="rounded-circle me-3" 
                                 style="width: 80px; height: 80px; object-fit: cover; border: 2px solid rgba(255, 255, 255, 0.2);">
                            <div class="flex-grow-1">
                                <h6 class="card-title mb-1"><%= user.username %></h6>
                                <p class="card-text text-muted mb-1">
                                    <small><%= user.currentPosition %> at <%= user.company %></small>
                                </p>
                                <p class="card-text text-muted mb-0">
                                    <small><%= user.department %> | <%= user.graduationYear %> | <%= user.experience %> years experience</small>
                                </p>
                            </div>
                        </div>
                        
                        <% if (user.bio) { %>
                            <p class="card-text text-muted mb-2 small"><%= user.bio %></p>
                        <% } %>

                        <div class="mb-2">
                            <h6 class="text-primary mb-1">Skills</h6>
                            <div class="d-flex flex-wrap gap-1">
                                <% if (user.skills && user.skills.length > 0) { %>
                                    <% user.skills.forEach(skill => { %>
                                        <span class="badge bg-primary"><%= skill %></span>
                                    <% }); %>
                                <% } else { %>
                                    <small class="text-muted">No skills listed</small>
                                <% } %>
                            </div>
                        </div>

                        <div class="mb-2">
                            <h6 class="text-primary mb-1">Expertise</h6>
                            <div class="d-flex flex-wrap gap-1">
                                <% if (user.expertise && user.expertise.length > 0) { %>
                                    <% user.expertise.forEach(item => { %>
                                        <span class="badge bg-info"><%= item %></span>
                                    <% }); %>
                                <% } else { %>
                                    <small class="text-muted">No expertise listed</small>
                                <% } %>
                            </div>
                        </div>

                        <div class="d-flex justify-content-between align-items-center">
                            <% if (user.linkedInUrl) { %>
                                <a href="<%= user.linkedInUrl %>" target="_blank" class="btn btn-sm btn-outline-primary">
                                    <i class="fab fa-linkedin me-1"></i>Connect on LinkedIn
                                </a>
                            <% } else { %>
                                <span class="text-muted small">No LinkedIn profile available</span>
                            <% } %>
                        </div>
                    </div>
                </div>
            </div>
        <% }); %>
    </div>
</div>

<style>
    .glass-card {
        background: rgba(26, 26, 46, 0.8);
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.2);
        border-radius: 15px;
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2),
                    0 0 0 1px rgba(255, 255, 255, 0.1),
                    0 0 20px rgba(0, 219, 222, 0.1);
        color: #ffffff;
        transition: transform 0.2s ease, box-shadow 0.2s ease;
    }

    .glass-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 12px 40px rgba(0, 0, 0, 0.3),
                    0 0 0 1px rgba(255, 255, 255, 0.15),
                    0 0 30px rgba(0, 219, 222, 0.2);
    }

    .card-title {
        color: #ffffff;
        font-weight: 600;
        margin: 0;
    }

    .card-text {
        color: rgba(255, 255, 255, 0.8);
        margin: 0;
    }

    .text-muted {
        color: rgba(255, 255, 255, 0.6) !important;
    }

    .text-primary {
        color: #00dbde !important;
    }

    .badge {
        padding: 0.25rem 0.5rem;
        font-weight: 500;
        border-radius: 15px;
        font-size: 0.7rem;
    }

    .badge.bg-primary {
        background: linear-gradient(45deg, #00dbde, #fc00ff) !important;
    }

    .badge.bg-info {
        background: linear-gradient(45deg, #00dbde, #00b4d8) !important;
    }

    .btn-outline-primary {
        color: #00dbde;
        border-color: #00dbde;
    }

    .btn-outline-primary:hover {
        background: #00dbde;
        border-color: #00dbde;
    }

    .network-list {
        max-height: 80vh;
        overflow-y: auto;
        padding-right: 1rem;
    }

    .network-list::-webkit-scrollbar {
        width: 6px;
    }

    .network-list::-webkit-scrollbar-track {
        background: rgba(255, 255, 255, 0.1);
        border-radius: 3px;
    }

    .network-list::-webkit-scrollbar-thumb {
        background: rgba(255, 255, 255, 0.2);
        border-radius: 3px;
    }

    .network-list::-webkit-scrollbar-thumb:hover {
        background: rgba(255, 255, 255, 0.3);
    }

    .gap-1 {
        gap: 0.25rem;
    }

    /* Search and Filter Styles */
    .search-filter-section {
        background: rgba(255, 255, 255, 0.05);
        padding: 20px 0;
        backdrop-filter: blur(10px);
        border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    }

    .search-bar {
        position: relative;
    }

    .search-bar .search-icon {
        position: absolute;
        right: 15px;
        top: 50%;
        transform: translateY(-50%);
        color: rgba(255, 255, 255, 0.5);
    }

    .glass-input {
        background: rgba(255, 255, 255, 0.1);
        border: 1px solid rgba(255, 255, 255, 0.2);
        color: white;
        padding: 12px 20px;
        border-radius: 30px;
        backdrop-filter: blur(10px);
        transition: all 0.3s ease;
    }

    .glass-input:focus {
        background: rgba(255, 255, 255, 0.15);
        border-color: rgba(255, 255, 255, 0.3);
        box-shadow: 0 0 15px rgba(0, 219, 222, 0.1);
        outline: none;
    }

    .glass-input::placeholder {
        color: rgba(255, 255, 255, 0.5);
    }

    .form-select.glass-input {
        background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='%23ffffff' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m2 5 6 6 6-6'/%3e%3c/svg%3e");
        padding-right: 40px;
    }

    .form-select.glass-input option {
        background: #1a1a2e;
        color: white;
    }

    /* Companies Section Styles */
    .companies-section {
        padding: 20px;
        background: rgba(26, 26, 46, 0.6);
        backdrop-filter: blur(10px);
        border-radius: 15px;
        border: 1px solid rgba(255, 255, 255, 0.1);
    }

    .company-card {
        display: flex;
        align-items: center;
        gap: 15px;
        padding: 15px;
        background: rgba(255, 255, 255, 0.05);
        border-radius: 10px;
        border: 1px solid rgba(255, 255, 255, 0.1);
        transition: all 0.3s ease;
        cursor: pointer;
    }

    .company-card:hover {
        background: rgba(255, 255, 255, 0.1);
        transform: translateY(-2px);
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
    }

    .company-logo {
        width: 40px;
        height: 40px;
        background: rgba(255, 255, 255, 0.1);
        border-radius: 8px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.2rem;
        color: #00dbde;
    }

    .company-info {
        flex: 1;
    }

    .company-name {
        color: white;
        margin: 0;
        font-size: 0.9rem;
        font-weight: 500;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .alumni-count {
        font-size: 0.75rem;
        color: rgba(255, 255, 255, 0.6);
    }

    .form-select.glass-input option.has-alumni {
        color: #00dbde;
        font-weight: 500;
    }

    .form-select.glass-input optgroup {
        background: #1a1a2e;
        color: rgba(255, 255, 255, 0.7);
        font-weight: 600;
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const searchInput = document.getElementById('searchInput');
        const companyFilter = document.getElementById('companyFilter');
        const alumniCards = document.querySelectorAll('.alumni-card');

        function filterCards() {
            const searchTerm = searchInput.value.toLowerCase();
            const selectedCompany = companyFilter.value.toLowerCase();

            alumniCards.forEach(card => {
                const name = card.dataset.name;
                const company = card.dataset.company;
                const position = card.dataset.position;

                const matchesSearch = name.includes(searchTerm) || 
                                   company.includes(searchTerm) || 
                                   position.includes(searchTerm);
                                   
                const matchesCompany = !selectedCompany || company === selectedCompany;

                if (matchesSearch && matchesCompany) {
                    card.style.display = 'block';
                    // Add fade-in animation
                    card.style.opacity = '0';
                    setTimeout(() => {
                        card.style.opacity = '1';
                    }, 50);
                } else {
                    card.style.display = 'none';
                }
            });
        }

        searchInput.addEventListener('input', filterCards);
        companyFilter.addEventListener('change', filterCards);

        // Add transition for smooth fade effect
        alumniCards.forEach(card => {
            card.style.transition = 'opacity 0.3s ease';
        });
    });

    function filterByCompany(company) {
        const companyFilter = document.getElementById('companyFilter');
        companyFilter.value = company;
        companyFilter.dispatchEvent(new Event('change'));
    }
</script>
